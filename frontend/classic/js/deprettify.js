/**
 * For HTML-formatted Coq snippets created by coqdoc.
 * This reverses the modifications made during pretty-printing
 * to allow the text to be placed in an editor.
 */
export class Deprettify {

    /**
     * Remove redundant leading and trailing newlines generated by coqdoc.
     * @param {HTMLElement} element 
     */
    static trim(element) {
        var c;
        if ((c = element.firstChild) && Deprettify.isWS(c))
            element.removeChild(c);
        if ((c = element.firstChild) && Deprettify.isBR(c))
            element.removeChild(c);
        //if ((c = element.firstChild) && Deprettify.isWS(c))
        //    element.removeChild(c);
        while ((c = element.lastChild) && 
                (Deprettify.isWS(c) || Deprettify.isBR(c)))
            element.removeChild(element.lastChild);
        return element;
    }

    /**
     * @param {ChildNode} node
     */
    static isWS(node) {
        return node.nodeType === Node.TEXT_NODE &&
               node.nodeValue.match(/^\s*\n$/);
    }

    /**
     * @param {ChildNode} node
     */
    static isBR(node) {
        return node.nodeType === Node.ELEMENT_NODE &&
               node.nodeName === 'BR';
    }

    /**
     * Translate back some unicode symbols to their original ASCII.
     * @param {string} text 
     */
    static cleanup(text) {
        for (let [re, s] of this.REPLACES) text = text.replace(re, s);
        return text.replace(/^\n/, '');
    }
}

/* Safari does not support static members? */
Deprettify.REPLACES = /** @type {[RegExp, string][]} */ ([
    [/\xa0/g, ' '], [/⇒/g, '=>'],   [/×/g, '*'],
    [/→/g, '->'],   [/←/g, '<-'],   [/¬/g, '~'],
    [/⊢/g, '|-'],   [/\n☐/g, ''],
    [/∃/g, 'exists']  /* because it is also a tactic... */
]);

// Local Variables:
// js-indent-level: 4
// End:
