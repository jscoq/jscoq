synopsis:     "The jsCoq Interactive Proof System"
description:  "A port of Coq to JavaScript -- run Coq in your browser"
name:         "jscoq"
opam-version: "2.0"
maintainer:   "e@x80.org"
authors:      "Emilio Jesús Gallego Arias, Shachar Itzhaky, Benoît Pin"
homepage:     "https://github.com/jscoq/jscoq"
bug-reports:  "https://github.com/jscoq/jscoq/issues"
dev-repo:     "git+https://github.com/jscoq/jscoq.git"
license:      "AGPL-3.0-or-later"
doc:          "https://github.com/jscoq/jscoq#readme"

depends: [
  "ocaml"               { >= "4.12.0"           }
  "dune"                { >= "3.5.0" & < "3.8"  }
  "js_of_ocaml"         { >= "4.0.0" & < "4.1"  }
  "js_of_ocaml-ppx"     { >= "4.0.0" & < "4.1"  }
  "js_of_ocaml-lwt"     { >= "4.0.0" & < "4.1"  }
  "yojson"              { >= "2.0.2"            }
  "ppx_deriving_yojson" { >= "3.5.3"            }
  "ppx_import"          { >= "1.8.0"            }
  "lwt_ppx"             { >= "2.0.1"            }
  # We should just rely on OPAM's coq-lsp but this is still early
  "sexplib"             { >= "v0.14.0"          }
  "ppx_sexp_conv"       { >= "v0.14.1" & < "v0.17" }
  "ppx_hash"            { >= "v0.14.0" & < "v0.17" }
  "ppx_compare"         { >= "v0.14.0" & < "v0.17" }
  "uri"                 { >= "4.2.0" }
  "dune-build-info"     { >= "3.2.0" }

  # coq-layout-engine:
  "tyxml"               { >= "4.5.0"            }
  "js_of_ocaml-tyxml"   { >= "3.8.0"            }

  # We build a local, patched Coq, but however it is still a dependency and
  # we could build from the opam-installed setup.
  # "coq"                 { >= "8.13.0" & < "8.14" }
  # This is a dependency of Coq itself.
  "zarith"              { >= "1.11"    }
  # (plus stubs for building with jsoo)
  "zarith_stubs_js"     { >= "v0.14.0" }
]

build: [ "dune" "build" "-p" name "-j" jobs ]
