(env
 (dev
  (flags :standard -rectypes))
 (release
  (flags :standard -rectypes -w +27+32)))

(rule
 (targets coq-pkgs)
 (deps
  (package coq-core)
  (package coq-stdlib)
  backend/jsoo/jscoq_worker.bc.cjs ; needed for symbol generation
  Makefile)
 (action
  (progn
   (run
    node
    %{dep:dist}/cli.cjs
    %{dep:etc/pkg-metadata/coq-pkgs.json}
    --rootdir
    %{env:COQBUILDDIR_REL=????}
    --nostdlib)
   ; building symbols using Make because Dune has no pattern rules T.T
   (run make libs-symb))))

(rule
 (targets
  (dir node_modules))
 (mode
  (promote (until-clean)))
 (deps package.json package-lock.json)
 (action
  (run npm install --no-save)))

(alias
 (name jscoq)
 (deps
  (alias shared)
  backend/jsoo/jscoq_worker.bc.cjs
  dist))

(alias
 (name wacoq)
 (deps
  (alias shared)
  backend/wasm/wacoq_worker.bc
  (glob_files backend/wasm/*.wasm)))

(alias
 (name shared)
 (deps
  (source_tree backend)
  (source_tree frontend)
  (source_tree examples)
  (source_tree docs) ; for `quick-help.html`
  jscoq.js
  index.html
  coq-pkgs
  node_modules
  dist))

; JavaScript build (Webpack)
; Emilio: do we want to list individual files inside dist here or keep
; the directory as a target?

(rule
 (target
  (dir dist))
 (mode
  (promote (until-clean)))
 (deps
  (source_tree backend)
  (source_tree frontend)
  webpack.config.js
  tsconfig.json
  node_modules)
 (action
  (run npm run %{env:NPM_TARGET=build})))

; Just the worker

(alias
 (name jscoq_worker)
 (deps backend/jsoo/jscoq_worker.bc.cjs))

(alias
 (name wacoq_worker)
 (deps backend/wasm/wacoq_worker.bc))

(dirs
 (:standard _vendor+*))

(vendored_dirs vendor)
